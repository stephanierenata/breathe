[{"/Users/stephanierenata/breathe/breathe/src/index.js":"1","/Users/stephanierenata/breathe/breathe/src/reportWebVitals.js":"2","/Users/stephanierenata/breathe/breathe/src/App.js":"3","/Users/stephanierenata/breathe/breathe/src/components/b/Breath.js":"4","/Users/stephanierenata/breathe/breathe/src/components/Home.js":"5","/Users/stephanierenata/breathe/breathe/src/components/f/Focus.js":"6","/Users/stephanierenata/breathe/breathe/src/components/s/Sleep.js":"7","/Users/stephanierenata/breathe/breathe/src/components/m/Meditation.js":"8","/Users/stephanierenata/breathe/breathe/src/components/NavBar.js":"9","/Users/stephanierenata/breathe/breathe/src/components/f/Break.js":"10","/Users/stephanierenata/breathe/breathe/src/components/f/Session.js":"11","/Users/stephanierenata/breathe/breathe/src/components/f/TimeLeft.js":"12"},{"size":500,"mtime":1611713585743,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611713585744,"results":"15","hashOfConfig":"14"},{"size":779,"mtime":1611814395604,"results":"16","hashOfConfig":"14"},{"size":485,"mtime":1611807315525,"results":"17","hashOfConfig":"14"},{"size":1161,"mtime":1613612394810,"results":"18","hashOfConfig":"14"},{"size":3242,"mtime":1613614135529,"results":"19","hashOfConfig":"14"},{"size":1534,"mtime":1611881094886,"results":"20","hashOfConfig":"14"},{"size":3077,"mtime":1611815645367,"results":"21","hashOfConfig":"14"},{"size":643,"mtime":1611733103591,"results":"22","hashOfConfig":"14"},{"size":554,"mtime":1612933251242,"results":"23","hashOfConfig":"14"},{"size":588,"mtime":1612933181232,"results":"24","hashOfConfig":"14"},{"size":651,"mtime":1613613307894,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"a6bqam",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/stephanierenata/breathe/breathe/src/index.js",[],["55","56"],"/Users/stephanierenata/breathe/breathe/src/reportWebVitals.js",[],"/Users/stephanierenata/breathe/breathe/src/App.js",[],"/Users/stephanierenata/breathe/breathe/src/components/b/Breath.js",[],"/Users/stephanierenata/breathe/breathe/src/components/Home.js",[],"/Users/stephanierenata/breathe/breathe/src/components/f/Focus.js",["57"],"/Users/stephanierenata/breathe/breathe/src/components/s/Sleep.js",["58"],"import React, { Component } from 'react';\nimport NavBar from '../NavBar';\n\nclass Sleep extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      currentTime: '',\n      alarmTime: '',\n    }\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n\n  componentDidMount(){\n    this.clock = setInterval(() => this.setCurrentTime(), 1000)\n    this.interval = setInterval(() => this.checkAlarmClock(), 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  setCurrentTime(){\n    this.setState({\n      currentTime: (new Date().getTime() / 1000).toFixed(0) //Date().toLocaleDateString('en-US', {hour12: false} )\n    });\n  }\n\n  setAlarmTime(e){\n    e.preventDefault();\n    const inputTime = e.target.value + ':00'\n    this.setState({\n      alarmTime: inputTime\n    })\n  }\n\n  checkAlarmClock(){\n    if(this.state.alarmMessage == 'undefined' || !this.state.alarmTime){\n      this.alarmMessage = \"Please set you alarm.\";\n    } else{\n      this.alarmMessage = \"Your alarm is set for\" + this.state.alarmTime;\n      if(this.state.currentTime === this.state.alarmTime){\n        alert(\"Wake Up!\");\n      }\n    }\n  }\n\n  render() {\n    return (\n\n      <div className=\"Sleep\">\n\n        <NavBar />\n        <h1>Sleep</h1>\n        <h2>It is {this.state.currentTime}.\n        </h2>\n        <h2>{this.alarmMessage}\n        </h2>\n        <form>\n          <input type=\"time\" onChange={this.setAlarmTime}></input>\n        </form>\n      </div>\n    )\n  }\n};\n\nexport default Sleep;\n\n","/Users/stephanierenata/breathe/breathe/src/components/m/Meditation.js",[],"/Users/stephanierenata/breathe/breathe/src/components/NavBar.js",[],"/Users/stephanierenata/breathe/breathe/src/components/f/Break.js",["59"],"import React, { useState } from 'react';\nimport moment from 'moment';\n\nconst Break = props => {\n    const{ breakLength, incrementByOne, decrementByOne} = props;\n\n    const breakInMin = moment.duration(breakLength, 's').minutes();\n\n    return (\n        <div className=\"Break\">\n            <h4>Break</h4>\n            \n            <button id=\"increment\" onClick={incrementByOne}> + </button>\n            <p>{breakInMin}</p>\n            <button id=\"decrement\" onClick={decrementByOne}> - </button>\n            \n        </div>\n    );\n};\n\nexport default Break;",["60","61"],"/Users/stephanierenata/breathe/breathe/src/components/f/Session.js",["62"],"import React, { useState } from 'react';\nimport moment from 'moment';\n\nconst Session = props => {\n\n    const{\n        sessionLength, incrementByOne, decrementByOne\n    } = props;\n    \n    const sessionInMin = moment.duration(sessionLength, 's').minutes();\n\n    return (\n        <div className=\"Session\">\n            <h4>Session</h4>\n            \n            <button id=\"increment\" onClick={incrementByOne}> + </button>\n            <p>{sessionInMin}</p>\n            <button id=\"decrement\" onClick={decrementByOne}> - </button>\n            \n        </div>\n    );\n};\n\nexport default Session;","/Users/stephanierenata/breathe/breathe/src/components/f/TimeLeft.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":109,"column":9,"nodeType":"69","endLine":109,"endColumn":28},{"ruleId":"70","severity":1,"message":"71","line":39,"column":32,"nodeType":"72","messageId":"73","endLine":39,"endColumn":34},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"63","replacedBy":"78"},{"ruleId":"65","replacedBy":"79"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["80"],["81"],"no-global-assign","no-unsafe-negation"]